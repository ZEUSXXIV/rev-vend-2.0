{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "import cv2 #pip install opencv-python\n",
    "from tkinter import *\n",
    "from tkinter import messagebox\n",
    "\n",
    "quantity= 0    # number of bottles inserted\n",
    "\n",
    "root = Tk()\n",
    "\n",
    "root.geometry(\"1300x860\")\n",
    "root.title(\"REVERSE VENDING MACHINE\")\n",
    "config_file = 'ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt' #file names  // architecture\n",
    "frozen_model = 'frozen_inference_graph.pb'                   #           // model\n",
    "\n",
    "\n",
    "model = cv2.dnn_DetectionModel(frozen_model,config_file) #load the model\n",
    "\n",
    "\n",
    "classLabels = [] #empty list\n",
    "file_name = 'labels.txt' # list of classes in coco dataset\n",
    "#with open(file_name,'rt') as fpt:\n",
    " #   classLabels = fpt.read().rstrip('\\n').rsplit('\\n')\n",
    "    \n",
    "model.setInputSize(320,320)  # in config file specification\n",
    "model.setInputScale(1/127.5) #255/2\n",
    "model.setInputMean((127.5,127.5,127.5))  # mobile net takes input as [-1,1]\n",
    "model.setInputSwapRB(True)\n",
    "\n",
    "def save_image():\n",
    "\n",
    "    cap = cv2.VideoCapture(0)\n",
    "\n",
    "    success,img = cap.read()\n",
    "\n",
    "    cv2.imshow('image',img)\n",
    "    cv2.waitKey(1)\n",
    "    cv2.imwrite('test.png',img)\n",
    "\n",
    "    cap.release()\n",
    "    cv2.destroyAllWindows()\n",
    "\n",
    "\n",
    "def scan_image():\n",
    "    global quantity\n",
    "    global nob,p\n",
    "    \n",
    "\n",
    "    img = cv2.imread('test.png')\n",
    "    z=0\n",
    "    classIndex , confidece, bbox = model.detect(img,confThreshold= 0.5 )\n",
    "    print(classIndex)\n",
    "    bool = False\n",
    "    for item in classIndex:\n",
    "        if item==44:\n",
    "            print(\"bottle\")\n",
    "            bool = True\n",
    "            quantity+=1\n",
    "            b2_window = c.create_window(830,400,anchor=\"nw\",window=b2) \n",
    "            \n",
    "            \n",
    "            if(quantity>1):\n",
    "                c.delete(nob)    # number of bottles\n",
    "                c.delete(p)\n",
    "            points = quantity*2\n",
    "            nob=c.create_text(500,400,text=\"TOTAL NUMBER OF BOTTLES ENTERED:\"+str(quantity),font = (\"Copperplate\",10),fill='black',anchor=\"nw\")\n",
    "            p=c.create_text(500,420,text=\"TOTAL POINTS:\"+str(points),font = (\"Copperplate\",10),fill='black',anchor=\"nw\")\n",
    "            break\n",
    "            \n",
    "    if bool == False:\n",
    "        messagebox.showinfo(\"Say Hello\", \"BOTTLE NOT FOUND\")\n",
    "            \n",
    "            \n",
    "def add():\n",
    "    save_image()\n",
    "    scan_image()\n",
    "    \n",
    "def terminate():\n",
    "    sys.exit()\n",
    "    \n",
    "# GUI \n",
    "\n",
    "\n",
    "def message():\n",
    "    \n",
    "    phone=e1.get()\n",
    "    print(\"will work \"+ phone)\n",
    "    \"\"\"\n",
    "    phone=e2.get()\n",
    "    url = \"https://www.fast2sms.com/dev/bulk\"\n",
    "    querystring = {\"authorization\":\"52L7HMmUf8l09JTNKnRGz3cAPIpsFEwrauWSjCiXhOgeodBvbYaLjgOrh8wvWzuypt5RJ0Dc93iI21ZM\",\"sender_id\":\"REV-VEND\",\"message\":\"YOU HAVE RECIEVED \"+str(n)+\" POINTS FOR ENTERING \"+str(count)+\" BOTTLES\"+\" \",\"language\":\"english\",\"route\":\"p\",\"numbers\":phone}\n",
    "\n",
    "    headers = {\n",
    "        'cache-control': \"no-cache\"\n",
    "    }\n",
    "\n",
    "    response = requests.request(\"GET\", url, headers=headers, params=querystring)\n",
    "\n",
    "    print(response.text)\n",
    "    print(n)\n",
    "    \"\"\"\n",
    "\n",
    "#def database():\n",
    "    \n",
    "\n",
    "def new():\n",
    "    global e1\n",
    "    pw = Toplevel()\n",
    "    pw.title(\"PHONE NUMBER\")\n",
    "    Label(pw,text=\"ENTER PHONE NUMBER: \").grid(row=0,column=0)\n",
    "    e1=Entry(pw,bd=5,width=50)\n",
    "    e1.grid(row=0,column=1)\n",
    "    b3=Button(pw,command=message,bg='gray',activebackground='blue',height=1,width=5,text='SUBMIT',font = (\"Copperplate\",10)).grid(row=1,column=1)\n",
    "    ##background\n",
    "\n",
    "bg = PhotoImage(file=\"bg3.png\",master = root)\n",
    "\n",
    "c= Canvas(root,width=1300,height=860)\n",
    "c.pack(fill=\"both\",expand=True)\n",
    "c.create_image(0,0,image = bg,anchor=\"nw\")\n",
    "\n",
    "    ##background>\n",
    "\n",
    "\n",
    "c.create_text(650,290,text=\"WELCOME\",font = (\"Copperplate\",50),fill='green')\n",
    "    \n",
    "b1=Button(root,command=add,bg='gray',activebackground='blue',height=3,width=10,text='ADD',font = (\"Copperplate\",20))\n",
    "b2=Button(root,command=new,bg='gray',activebackground='blue',height=3,width=10,text='PROCEED',font = (\"Copperplate\",20))\n",
    "\n",
    "\n",
    "b1_window = c.create_window(300,400,anchor=\"nw\",window=b1)\n",
    "\n",
    "\n",
    "\n",
    "root.mainloop()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
